from llm_sandbox import SandboxSession\nfrom llm_sandbox.utils import get_libraries_installation_command, get_code_execution_command, get_code_file_extension, image_exists, SupportedLanguage, DefaultImage\nimport os\nimport tempfile\n\ndef run_code_in_sandbox(lang, code_snippets, libraries=None):\n    if libraries is None:\n        libraries = []\n    \/\/ Check if the default image exists and create a temporary directory for output files \/\/\"default_image = DefaultImage.__dict__.get(lang.upper())\n    if not default_image:\n        raise ValueError(f"No default image available for language: {lang}")\n    \/\/ Create a temporary directory to store output files \/\/\\ntemp_dir = tempfile.mkdtemp()\n    \/\/ Ensure the directory exists \/\/\"os.makedirs(temp_dir, exist_ok=True)\n    \/\/ Initialize the sandbox session \/\/\\n    with SandboxSession(lang=lang, keep_template=True, verbose=True) as session:\n        \/\/ Install libraries if provided \/\/\\n        if libraries:\n            installation_command = get_libraries_installation_command(lang, libraries)\n            if installation_command:\n                session.execute_command(installation_command)\n        \/\/ Run each code snippet \/\/\\n        for code in code_snippets:\n            code_file_extension = get_code_file_extension(lang)\n            code_file_path = os.path.join(temp_dir, f"code.{code_file_extension}")\n            with open(code_file_path, 'w') as code_file:\n                code_file.write(code)\n            execution_commands = get_code_execution_command(lang, code_file_path)\n            for command in execution_commands:\n                output = session.run(command)\n                print(output)\n\ndef run_python_code():\n    code_snippets = [\